<?php

use Bitrix\Main\Localization\Loc;
{% if generate_entity %}
use {{ namespace }}\ModuleTable;
{% endif %}
use ProklUng\Module\Boilerplate\Module;
use ProklUng\Module\Boilerplate\ModuleUtilsTrait;

Loc::loadMessages(__FILE__);

class {{ module_class }} extends CModule
{
    use ModuleUtilsTrait;

    public function __construct()
    {
        $arModuleVersion = [];

        include __DIR__ . '/version.php';

        if (is_array($arModuleVersion)
            &&
            array_key_exists('VERSION', $arModuleVersion))
        {
            $this->MODULE_VERSION = $arModuleVersion['VERSION'];
            $this->MODULE_VERSION_DATE = $arModuleVersion['VERSION_DATE'];
        }

        $this->MODULE_FULL_NAME = '{{ module_name }}';
        $this->MODULE_VENDOR = '{{ module_vendor }}';
        $prefixLangCode = '{{ module_lang_suffix }}';

        $this->MODULE_NAME = Loc::getMessage($prefixLangCode . '_MODULE_NAME');
        $this->MODULE_ID = $this->MODULE_VENDOR . '.' . $this->MODULE_FULL_NAME;
        {% if generate_entity %}
        $this->MODULE_TABLE_ENTITY = ModuleTable::class;
        {% endif %}

        $this->MODULE_DESCRIPTION = Loc::getMessage($prefixLangCode . '_MODULE_DESCRIPTION');
        $this->MODULE_GROUP_RIGHTS = 'N';
        $this->PARTNER_NAME = Loc::getMessage($prefixLangCode . '_MODULE_PARTNER_NAME');
        $this->PARTNER_URI = Loc::getMessage($prefixLangCode . 'MODULE_PARTNER_URI');

        {% if generate_admin %}
        $this->INSTALL_PATHS = [
            '/local/modules/{{ module_id }}/install/admin/{{ module_name_converted }}_index.php'
             => '/bitrix/admin/{{ admin_filename }}.php'
        ];
        {% endif %}

        $this->moduleManager = new Module(
        [
        'MODULE_ID' => $this->MODULE_ID,
        'VENDOR_ID' => $this->MODULE_VENDOR,
        'MODULE_VERSION' => $this->MODULE_VERSION,
        'MODULE_VERSION_DATE' => $this->MODULE_VERSION_DATE,
        'ADMIN_FORM_ID' => $this->MODULE_VENDOR . '_settings_form',
        ]
        );

        $this->moduleManager->addModuleInstance($this);
        $this->options();
    }

    {% if generate_admin %}
    /**
    * @inheritDoc
    */
    protected function getSchemaTabsAdmin() : array
    {
        return ['tab1' => [
            'TAB' => 'Таб 1',
            'TITLE' => 'Таб 1',
        ],
        'tab2' => [
            'TAB' => 'Таб 2',
            'TITLE' => 'Таб 2',
            ]
        ];
    }

    /**
    * @inheritDoc
    */
    protected function getSchemaOptionsAdmin() : array
    {
        return [
            'Test_option_1' =>
                [
                    'label' => 'Тестовая опция 1',
                    'tab' => 'tab1',
                    'type' => 'text',
                ],
            'Test_option_2' =>
                [
                     'label' => 'Тестовая опция 2',
                     'tab' => 'tab2',
                     'type' => 'text',
                ],
        ];
    }

    {% endif %}
}
