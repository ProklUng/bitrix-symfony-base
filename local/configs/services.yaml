imports:
  - {resource: services/utils.yaml }
  - {resource: services/filesystem.yaml }
  - {resource: services/cache.yaml }
  - {resource: services/validations.yaml }
  - {resource: services/twig.yaml }
  - {resource: services/assets.yaml }
  - {resource: services/bitrix.yaml }
  - {resource: services/image_resizer.yaml }
  - {resource: services/seo.yaml }
  - {resource: services/controllers.yaml }
  - {resource: services/resolvers.yaml }
  - {resource: services/guzzle.yaml }
  - {resource: services/console_commands.yaml }
  - {resource: services/tasks.yaml }
  - {resource: services/facades.yaml }

parameters:
  namespace.models.infoblocks: 'Local\Models'
  debug: '%env(bool:resolve:DEBUG)%'
  # Компилировать ли сервис-контейнер?
  compile.container: true

  # Путь к сборке окружения dev.
  build.dev.path: 'local/build/'
  # Путь к сборке окружения prod.
  build.production.path: 'local/dist/'

  # Базовый API URL (partial).
  base.api.url: '/api/'

  csrf_protection: false
  enable_annotations: true
  annotations.cache_ttl_default: 3600

services:
  # конфигурация по умолчанию в *этом* файле
  _defaults:
    autowire: true
    autoconfigure: true
    public: true

  # Ядро.
  # Сервис kernel регистрируется при загрузке контейнера.
  Symfony\Component\HttpKernel\KernelInterface: '@kernel'
  Symfony\Component\HttpKernel\Kernel: '@kernel'

  # Опции приложения.
  app.options:
    class: Local\Services\Kernel

  # Параметры приложения.
  parameter_bag:
    class: Symfony\Component\DependencyInjection\ParameterBag\ContainerBag
    arguments: ["@service_container"]

  event.dispatcher:
    class: Local\Util\SymfonyEvents\Events
